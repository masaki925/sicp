q1.25

- remainder の位置

- p.29 の注46 を参照。

	3 * 5 mod 4 = 15 mod 4
	            = 3 ... 3

	3 mod 4 = 0 ... 3
	5 mod 4 = 1 ... 1

	3 * 1 mod 4 = 3 mod 4
	            = 0 ... 3

	大きな数を計算するときに有利。
	実行結果を見るとわかりやすい。















----
q1.26

- 計算量は、ステップ数(作用させる回数) で算出する。

- Scheme は作用的順序(評価した後、作用させる)

- 元はといえば、p.25 の逐次平方を利用して指数が偶数の場合に指数を半減させていくることで、θ(logn) の計算量としていた



- しかしLouis の例では逐次平方を使っているけども、減った分だけ余計なプロセスが増えてしまって、逐次平方のメリットを潰してしまった。

--【疑問】2 * θ(logn) とはならない？


##################################
q1.26 do with 'square'

>(expmod 2 8 8)
> (expmod 2 4 8)
> >(expmod 2 2 8)
> > (expmod 2 1 8)
> > >(expmod 2 0 8)
< < <1
< < 2
< <4
< 0
<0
0







----
q1.27















